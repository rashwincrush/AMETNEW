CREATE TABLE IF NOT EXISTS public.feedback (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ WITH TIME ZONE DEFAULT NOW(),
  user_id UUID REFERENCES public.profiles(id) ON DELETE SET NULL,
  name TEXT,
  email TEXT,
  page_url TEXT NOT NULL,
  feedback_type TEXT NOT NULL CHECK (feedback_type IN ('bug', 'feature_request', 'general')),
  message TEXT NOT NULL,
  status TEXT DEFAULT 'new' CHECK (status IN ('new', 'in_progress', 'resolved'))
);

ALTER TABLE public.feedback ENABLE ROW LEVEL SECURITY;

-- Allow anyone to submit feedback
CREATE POLICY "Allow public insert access for feedback" ON public.feedback
  FOR INSERT WITH CHECK (TRUE);

-- Allow admin users to view, update, and delete feedback
CREATE POLICY "Allow admin full access to feedback" ON public.feedback
  FOR ALL
  USING (is_admin(auth.uid()))
  WITH CHECK (is_admin(auth.uid()));

-- Enable realtime notifications for new feedback
ALTER PUBLICATION supabase_realtime ADD TABLE public.feedback;
